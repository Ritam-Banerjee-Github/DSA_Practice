
class Solution {
    
    public String reverseParentheses(String s) {
        int n=s.length();
        String ans="";
        Stack<Character> stack=new Stack<>();
        int first=-1;
        int last=-1;
        for(int i=0;i<n;i++){
           if(s.charAt(i)=='(' && first==-1){
               first=i;
           }
           
           if(s.charAt(i)==')') last=i; 
        }
        
        for(int i=first;i<=last;i++){
            String curr="";
            
            if(i==last){
                while(!stack.isEmpty() && stack.peek()!='('){
                    curr=curr+stack.pop();
                }
                if(!stack.isEmpty()) stack.pop();
                ans=ans+curr;
            }else if(s.charAt(i)==')'){
                while(!stack.isEmpty() && stack.peek()!='('){
                    curr=curr+stack.pop();
                }
                
                stack.pop();
                for(int j=0;j<curr.length();j++){
                    stack.push(curr.charAt(j));
                }
            }else{
                stack.push(s.charAt(i));
            }
        }
        
        String remainingStr="";
        while(!stack.isEmpty()){         //Because of this ege case : Input:"ta()usw((((a))))"  Output:"taa" Expected:"tauswa"
         remainingStr=stack.pop()+remainingStr;   
        }
        
        ans=remainingStr+ans;
        
        if(first!=0){
            String curr="";
            for(int i=0;i<first;i++){
                curr=curr+s.charAt(i);
            }
            
            ans=curr+ans;
        }
        
        if(last!=n-1){
            String curr="";
            for(int i=last+1;i<n;i++){
                curr=curr+s.charAt(i);
            }
            ans=ans+curr;
        }
        
        return ans;
    }
}
