import java.util.* ;
import java.io.*; 



class Pair{
	int num;
	int freq;
	public Pair(int num,int freq){
		this.num=num;
		this.freq=freq;
	}
}public class Solution {


	public static int[] KMostFrequent(int n, int k, int[] arr) {
		// Write your code here.
		HashMap<Integer,Integer> map=new HashMap<>();
		for(int i=0;i<n;i++){
			map.put(arr[i],map.getOrDefault(arr[i],0)+1);
		}
        PriorityQueue<Pair> pq=new PriorityQueue<>(new Comparator<Pair>(){
			public int compare(Pair a,Pair b){
                int freq1=a.freq;
                 int freq2=b.freq;
				 if(freq1>freq2) return 1;
				 else if(freq1<freq2) return -1;
				 else
				 return 0;
			}
		});
		for(Integer key:map.keySet()){
			pq.add(new Pair(key,map.get(key)));
			if(pq.size()>k){
				pq.remove();
			}
		}
		int[] ans=new int[k];
		int index=0;
		while(!pq.isEmpty()){
           Pair p=pq.peek();
		   ans[index]=p.num;
		   pq.remove();
		   index++;
		}

      return ans;

	}

}
