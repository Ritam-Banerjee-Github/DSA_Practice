class Solution {
    private int solve(int index, int target, int[] nums,int[][] dp){
        if(target==0) return 1;

        if(index == nums.length) return 0;

        if(dp[index][target]!=-1) return dp[index][target];


        int notTake=solve(index+1,target,nums,dp);
        int take=0;
        if(nums[index]<=target){
            take=solve(0,target-nums[index],nums,dp);// We could observe from example, after taking an element it is againg starting from index 0
        }

        return dp[index][target]=take+notTake;
    }
    public int combinationSum4(int[] nums, int target) {
        int n=nums.length;
        int[][] dp=new int[n+1][target+1];
        for(int[] row: dp){
            Arrays.fill(row,-1);
        }
        return solve(0,target,nums,dp);
    }
}