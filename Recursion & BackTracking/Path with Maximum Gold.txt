class Solution {
    int ans=0;
    
    private void solve(int i, int j, int n, int m, int[][] grid, int[][] vis, int score){
        score+=grid[i][j];
        
        int[] delRow={-1,0,1,0};
        int[] delCol={0,1,0,-1};
        
        for(int k=0;k<4;k++){
            int nrow=i+delRow[k];
            int ncol=j+delCol[k];
            
            if(nrow>=0 && nrow<n && ncol>=0 && ncol<m && grid[nrow][ncol]!=0 && vis[nrow][ncol]!=1){
                vis[nrow][ncol]=1;
                solve(nrow,ncol,n,m,grid,vis,score);
                vis[nrow][ncol]=0;
            }
        }
        
        ans=Math.max(ans,score);
    }

    public int getMaximumGold(int[][] grid) {
        int n=grid.length;
        int m=grid[0].length;
        int[][] vis=new int[n][m];
        
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]!=0 && vis[i][j]!=1){
                    vis[i][j]=1;
                    // ans=Math.max(ans,solve(i,j,n,m,grid,vis));
                    solve(i,j,n,m,grid,vis,0);
                    vis[i][j]=0;
                }
            }
        }
        
        return ans;
    }
}