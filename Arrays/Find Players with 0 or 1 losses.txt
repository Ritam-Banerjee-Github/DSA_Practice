class Solution {
    public List<List<Integer>> findWinners(int[][] matches) {
        HashSet<Integer> winnerSet=new HashSet<>();
        HashMap<Integer,Integer> loserCount=new HashMap<>();
        
        int n=matches.length;
        
        for(int i=0;i<n;i++){
            int winner=matches[i][0];
            int loser=matches[i][1];
            
            winnerSet.add(winner);
            loserCount.put(loser,loserCount.getOrDefault(loser,0)+1);
            
        }
        
        ArrayList<Integer> winners=new ArrayList<>();
        ArrayList<Integer> losers=new ArrayList<>();
        
        for(int win:winnerSet){
            if(!loserCount.containsKey(win)){
                 winners.add(win);        
            }
        }
        
        for(int loser:loserCount.keySet()){
            if(loserCount.get(loser)==1){
                losers.add(loser);
            }
        }
        
        
        List<List<Integer>> result=new ArrayList<>();
        
        Collections.sort(winners);
        Collections.sort(losers);
        
        result.add(new ArrayList<>(winners));
        result.add(new ArrayList<>(losers));
        
        return result;
    }
}