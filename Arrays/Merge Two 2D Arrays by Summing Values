class Solution {
    public int[][] mergeArrays(int[][] nums1, int[][] nums2) {
        int n=nums1.length;
        int m=nums2.length;
        Map<Integer,Integer> map=new LinkedHashMap<>(); //As all first elements are in ascending order, so we just need to store the elements in order of their insertion

        int i=0;
        int j=0;

        while(i<n && j<m){
            if(nums1[i][0]<nums2[j][0]){
               map.put(nums1[i][0],nums1[i][1]);
               i++;
            }else if(nums1[i][0]>nums2[j][0]){
                map.put(nums2[j][0],nums2[j][1]);
                j++;
            }else{
                map.put(nums1[i][0],nums1[i][1]+nums2[j][1]);
                i++;
                j++;
            }
        }

        while(i<n){
            map.put(nums1[i][0],nums1[i][1]);
            i++;
        }

        while(j<m){
           map.put(nums2[j][0],nums2[j][1]);
            j++;
        }


        int[][] ans=new int[map.size()][2];
        int index=0;

        for(int key:map.keySet()){
           ans[index][0]=key;
           ans[index][1]=map.get(key);
           index++;
        }

        return ans;
    }
}
