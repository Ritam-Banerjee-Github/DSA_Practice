class Solution {
    public int[][] largestLocal(int[][] grid) {
        int n=grid.length;
        int[][] ans=new int[n-2][n-2];
        
        for(int i=0;i<n-2;i++){
            for(int j=0;j<n-2;j++){
                int centeredAtRow=i+1;
                int centeredAtColumn=j+1;
                
                int localMax=Integer.MIN_VALUE;
                
                for(int row=centeredAtRow-1;row<=centeredAtRow+1;row++){
                    for(int col=centeredAtColumn-1;col<=centeredAtColumn+1;col++){
                        localMax=Math.max(localMax,grid[row][col]);
                    }
                }
                
                ans[i][j]=localMax;
            }
        }
        
        return ans;
    }
}

O((N-2)*(N-2)*3*3)