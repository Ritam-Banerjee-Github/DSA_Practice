class Solution {
    private int binarySearch(int target, int n, int[] cumSum){
        int index=-1;
        int l=0;
        int r=n-1;
        int mid;
        
        while(l<=r){
            mid=l+(r-l)/2;
            
            if(cumSum[mid]<=target){
                index=mid;
                l=mid+1;
            }else if(cumSum[mid]>target){
                r=mid-1;
            }
        }
        return index+1;
    }
    public int[] answerQueries(int[] nums, int[] queries) {
        int n=nums.length;
        int m=queries.length;
        
        int[] ans=new int[m];
        
        Arrays.sort(nums);
        
        int[] cumSum=new int[n];
        
        int sum=0;
        for(int i=0;i<n;i++){
            sum+=nums[i];
            cumSum[i]=sum;
        }
    
        for(int i=0,j=0;i<m && j<m;i++,j++){
            int index=binarySearch(queries[i],n,cumSum);
            ans[j]=index;
        }
        
        return ans;
    }
}

TC - O(nlogn)+O(n)+O(m*logn)
SC- O(m+n)