class Solution {
    boolean[] isPrime=new boolean[1001];
    
    private void seive(){
        Arrays.fill(isPrime,true);
        isPrime[0]=false;
        isPrime[1]=false;

        for(int i=2;i*i<1000;i++){
            if(isPrime[i]==false) continue;

            for(int j=i*i;j<1000;j=j+i){
                isPrime[j]=false;
            }
        }
    }

    public boolean primeSubOperation(int[] nums) {
       seive();

       int n=nums.length;
       for(int i=n-2;i>=0;i--){

           if(nums[i]>=nums[i+1]){
            for(int j=2;j<nums[i];j++){
                if(isPrime[j]==true){
                   int subtract=nums[i]-j;
                   if(subtract<nums[i+1]){
                    nums[i]=subtract;
                    break;
                   }
                }
            }

            if(nums[i]>=nums[i+1]) return false;
           }
       }

       return true;   
    }
}
