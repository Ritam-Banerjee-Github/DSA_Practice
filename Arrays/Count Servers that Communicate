Approach 1 : Brute Force
class Pair{
    int row;
    int col;

    public Pair(int row, int col){
        this.row=row;
        this.col=col;
    }
}

class Solution {
    public int countServers(int[][] grid) {
        int n=grid.length;
        int m=grid[0].length;
        Set<String> set=new HashSet<>();

        Queue<Pair> q=new LinkedList<>();

        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]==1) q.add(new Pair(i,j));
            }
        }

        while(!q.isEmpty()){
          Pair p=q.remove();
          int row=p.row;
          int col=p.col;

          // Up 
         for(int i=row-1;i>=0;i--){
            if(grid[i][col]==1){
                String identity=i+"_"+col;
                set.add(identity);
            }
         }
          // Down
         for(int i=row+1;i<n;i++){
            if(grid[i][col]==1){
                String identity=i+"_"+col;
                set.add(identity);
            }
         }
          // Right
         for(int i=col+1;i<m;i++){
            if(grid[row][i]==1){
                String identity=row+"_"+i;
                set.add(identity);
            }
         }
          // Left
         for(int i=col-1;i>=0;i--){
            if(grid[row][i]==1){
                String identity=row+"_"+i;
                set.add(identity);
            }
          }

          
        }


        return set.size();
    }
}
