We can use simple recursion to generate all possible results, but that will be O(limit^3) solution

Optimal - O(N)
class Solution {
    public long distributeCandies(int n, int limit) {
        long ans=0;

        //fix a particular candy to child 1;
        //min for ch1 can be obtained by giving max candies to both ch2 and ch3
        // so minCh1 = n - 2*limit;
        // so maxCh1 = limit but what if n is less so ultimately maxCh1 = Math.min(n, limit)

        long minChild1=Math.max(0,n-2*limit);
        long maxChild1=Math.min(n,limit);

        for(long i=minChild1;i<=maxChild1;i++){
            long remaining=n-i;

            long minChild2=Math.max(0,remaining-limit);
            long maxChild2=Math.min(remaining,limit);

            ans+=(maxChild2-minChild2+1);
        }
        return ans;
    }
}
