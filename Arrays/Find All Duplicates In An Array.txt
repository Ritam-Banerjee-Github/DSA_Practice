Brute :

class Solution {
    public List<Integer> findDuplicates(int[] nums) {
        List<Integer> ans=new ArrayList<>();
        int n=nums.length;
        HashMap<Integer,Integer> map=new HashMap<>();
        
        for(int i=0;i<n;i++){
            map.put(nums[i],map.getOrDefault(nums[i],0)+1);
            if(map.get(nums[i])==2) ans.add(nums[i]);
        }
        
        return ans;
    }
}

Optimal : Whenever questions says that the array numbers lies in range between 1 to n(size of array), always think if we can use this approach - "Use the numbers as Index"

class Solution {
    public List<Integer> findDuplicates(int[] nums) {
        List<Integer> ans=new ArrayList<>();
        int n=nums.length;
        
        for(int i=0;i<n;i++){
            int num=Math.abs(nums[i]);  
            int index=num-1; // Since the range is from 1 to n, the array indexes will be from 0 to n-1.
            
            if(nums[index]<0){
                ans.add(num);
            }else{
                nums[index]=nums[index]*(-1);
            }
        }
        
        return ans;
    }
}