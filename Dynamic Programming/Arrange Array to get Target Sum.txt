import java.util.* ;
import java.io.*; 
public class Solution {
    private static int utility(int index,int[] arr,int d,int[][] dp){
      if(index==0){ 
      if(arr[index]==0 && d==0)return 2;
      if(d ==0 || arr[0]==d) return 1;
       return 0;
      }
         if(dp[index][d]!=-1) return dp[index][d];
        int notPick=utility(index-1,arr,d,dp);
        int pick=0;
        if(arr[index]<=d){
            pick=utility(index-1,arr,d-arr[index],dp);
        }
        return dp[index][d]=pick+notPick;
    }
    public static int targetSum(int n, int target, int[] arr) {
    	// Write your code here.
        int sum=0;
        for(int i=0;i<n;i++){
            sum+=arr[i];
        }
         if(sum+target<0) return 0;
         if((sum+target)%2==1) return 0;
        int d=(sum+target)/2;
        int[][] dp=new int[n][d+1];
        for(int[] rows:dp){
            Arrays.fill(rows,-1);
        }
       
        return utility(n-1,arr,d,dp);
    }
}
