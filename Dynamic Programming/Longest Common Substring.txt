If we use recursion + memoization method then we need to use 3 states changes. This will give TLE. Only Tabulation is accepted.

Tabulation -

class Solution{
    int longestCommonSubstr(String S1, String S2, int n, int m){
        // code here
        int[][] dp = new int[n+1][m+1];
        int ans=0;
        
        for(int i=1;i<=n;i++){
            for(int j=1;j<=m;j++){
                if(S1.charAt(i-1)==S2.charAt(j-1)){
                        dp[i][j]=1+dp[i-1][j-1];
                        ans=Math.max(ans,dp[i][j]);
                    }
                    else{
                    dp[i][j]=0;  //By defailut vaue will be 0, just to better visibility we are writing
                }
            }
        }
        return ans;
     }
}

Time Complexity: O(N*M)

Reason: There are two nested loops

Space Complexity: O(N*M)

Reason: We are using an external array of size ‘N*M)’. Stack Space is eliminated.