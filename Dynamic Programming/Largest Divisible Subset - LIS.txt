Note : Printing LIS variant

class Solution {
    public List<Integer> largestDivisibleSubset(int[] nums) {
        int n=nums.length;
        int[] dp=new int[n];
        int max=Integer.MIN_VALUE;
        int last_pos=0;
        int[] position=new int[n];
        
       List<Integer> ans=new ArrayList<>();
     
        Arrays.fill(position,-1);
        Arrays.fill(dp,1);
        
        Arrays.sort(nums);
        
        for(int i=0;i<n;i++){
            for(int j=0;j<i;j++){
               if(nums[i]%nums[j]==0){
                   if(dp[j]+1>dp[i]){
                       dp[i]=dp[j]+1;
                       position[i]=j;
                   }
                   
                   if(dp[i]>max){
                       max=dp[i];
                       last_pos=i;
                   }
               } 
            }
        }
        
     
        
        while(last_pos!=-1){
          ans.add(nums[last_pos]);
            last_pos=position[last_pos];
        }
        
        return ans;
    }
}