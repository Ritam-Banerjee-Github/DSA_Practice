class Solution {
    private int solve(int i,int prev,String s,int[][] dp){
        if(i>=s.length()) return 0;

        if(dp[i][prev]!=-1) return dp[i][prev];

        int flip=Integer.MAX_VALUE;
        int notFlip=Integer.MAX_VALUE;
        
        if(s.charAt(i)=='0'){
           if(prev==1){
               flip=1+solve(i+1,1,s,dp);
           }else{
               flip=1+solve(i+1,1,s,dp);
               notFlip=solve(i+1,0,s,dp);
           }
        }
        else if(s.charAt(i)=='1'){
            if(prev==1){
                notFlip=solve(i+1,1,s,dp);
            }else{
                flip=1+solve(i+1,0,s,dp);
                notFlip=solve(i+1,1,s,dp);
            }
        }

        return dp[i][prev]=Math.min(flip,notFlip);
    }
    public int minFlipsMonoIncr(String s) {
        int[][] dp=new int[s.length()+1][2];
        for(int[] row:dp){
            Arrays.fill(row,-1);
        }
        return solve(0,0,s,dp);
    }
}