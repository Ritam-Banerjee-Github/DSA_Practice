class Pair{
    int score;
    int age;
    
    public Pair(int score, int age){
        this.score=score;
        this.age=age;
    }
}
class Solution {
    
    public int bestTeamScore(int[] scores, int[] ages) {
        int n=ages.length;
        if(n==1) return scores[0];
        
        List<Pair> list=new ArrayList<>();
        
        long[] dp=new long[n];
        
        for(int i=0;i<n;i++){
            list.add(new Pair(scores[i],ages[i]));
        }
        
        Collections.sort(list,new Comparator<Pair>(){
           public int compare(Pair a, Pair b){
               if(a.age>b.age) return 1;
               else if(a.age<b.age) return -1;
               else{
                   if(a.score<b.score) return -1;
                   return 1;
               }
           } 
        });
        
        int ans=Integer.MIN_VALUE;
     
        
        for(int i=0;i<n;i++){
            dp[i]=list.get(i).score;
            for(int j=0;j<i;j++){
                if(list.get(i).age!=list.get(j).age && list.get(j).score>list.get(i).score) continue;
                dp[i]=Math.max(dp[i],dp[j]+list.get(i).score); 
            }
            ans=Math.max(ans,(int)dp[i]);
        }
        
        return ans;
    }
} 