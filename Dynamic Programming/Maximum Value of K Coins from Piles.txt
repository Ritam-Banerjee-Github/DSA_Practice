class Solution {
    private int solve(int i, int k, List<List<Integer>> piles,int[][] dp){
        if(i>=piles.size()) return 0;

        if(dp[i][k]!=-1) return dp[i][k];

        int notTake=solve(i+1,k,piles,dp);
        int take=Integer.MIN_VALUE;
        int sum=0;

        for(int j=0;j<Math.min(k,piles.get(i).size());j++){
            sum+=piles.get(i).get(j);
            take=Math.max(take,sum+solve(i+1,k-(j+1),piles,dp));
        }

        return dp[i][k]=Math.max(take,notTake);
    }
    public int maxValueOfCoins(List<List<Integer>> piles, int k) {
        int[][] dp=new int[piles.size()][k+1];
        for(int[] row:dp){
            Arrays.fill(row,-1);
        }
        return solve(0,k,piles,dp);
    }
}