Similar Problem - LC-546 : Remove Boxes
class Solution {
    private int solve(int l, int r, String s, int[][] dp){
        if(l==r) return 1;
        if(l>r) return 0;
        
        if(dp[l][r]!=-1) return dp[l][r];
        
        int index=l+1;
        while(index<=r && s.charAt(index)==s.charAt(l)){
            index++;
        }
        
        if(index==r+1) return 1;
        
        int basicApproach=1+solve(index,r,s,dp);
        
        int lalachWalaApproach=Integer.MAX_VALUE;
        
        for(int j=index;j<=r;j++){
            if(s.charAt(j)==s.charAt(l)){
                lalachWalaApproach=Math.min(lalachWalaApproach,solve(index,j-1,s,dp)+solve(j,r,s,dp));  
//There should be addition of 1 for last function. We are not doing this as it will get added with the 1 when we call the basicApproach for its recursion
            }
        }
        
        return dp[l][r]=Math.min(basicApproach,lalachWalaApproach);
    }
    
    public int strangePrinter(String s) {
        int n=s.length();
        int[][] dp=new int[n+1][n+1];
        
        for(int[] row:dp){
            Arrays.fill(row,-1);
        }
        
        return solve(0,n-1,s,dp);
    }
}
