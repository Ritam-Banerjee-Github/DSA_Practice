class Solution {
    public int peopleAwareOfSecret(int n, int delay, int forget) {
        long ans=0;
        long mod=(long)(1e9+7);

        long noOfPeopleAlreadySharingSecret=0;
        long dp[]=new long[n+1];

        dp[1]=1;

        for(int i=2;i<=n;i++){
          long noOfNewPeopleFindingSecret=dp[Math.max(i-delay,0)];
          long noOfPeopleForgetingSecret=dp[Math.max(i-forget,0)];
           noOfPeopleAlreadySharingSecret=(noOfPeopleAlreadySharingSecret + noOfNewPeopleFindingSecret - noOfPeopleForgetingSecret + mod)%mod;

          //dp[i] means number of people finding secret on day i.
           dp[i]=noOfPeopleAlreadySharingSecret;

        }

        for(int i=n-forget+1;i<=n;i++){
            ans=(ans+dp[i])%mod;
        }

        return (int)ans;
    }
}

TC ~ O(2n)
SC - O(n)