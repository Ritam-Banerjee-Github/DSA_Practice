class Solution
{
    //Function to return list containing vertices in Topological order. 
    static int[] topoSort(int V, ArrayList<ArrayList<Integer>> adj) 
    {
        // add your code here
        Queue<Integer> q=new LinkedList<Integer>();
        int[] inDegree=new int[V];
        
        for(int i=0; i<V; i++){
            for(int next: adj.get(i)){
                inDegree[next]++;
            }
        }
        for(int i=0;i<V;i++){
            if(inDegree[i]==0){
                q.add(i);
            }
        }

        int[] ans=new int[V];
        int i=0;

        while(!q.isEmpty()){
            int node=q.peek();
            q.remove();
            ans[i++]=node;
            
            for(int next:adj.get(node)){
                inDegree[next]--;
                if(inDegree[next]==0){
                    q.add(next);
                }
            }
        }

        return ans;
    }    
}

TC - O(V+E)
SC - O(V)