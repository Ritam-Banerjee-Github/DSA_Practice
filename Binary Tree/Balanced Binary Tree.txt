Balanced Tree -> A balanced tree is where the diff b/w left height and right height of any node is <=1

class Node
{
	int data;
	Node left,right;
	
	Node(int d)
	{
		data = d;
		left = right = null;		
	}
} */

class Tree
{
    
    //Function to check whether a binary tree is balanced or not.
    boolean isBalanced(Node root)
    {
	// Your code here
	if(isBalancedUtility(root)==-1) {
	    return false;
	}
	return true;
	
    }
    int isBalancedUtility(Node root)
    {
	// Your code here
	if(root==null) return 0;
	
	int lh = isBalancedUtility(root.left);
	if(lh==-1) return -1;
	
	int rh= isBalancedUtility(root.right);
	if(rh==-1) return -1;
		
	if(Math.abs(lh-rh)>1) return -1;
	
	return 1 + Math.max(lh,rh);
    }
}

