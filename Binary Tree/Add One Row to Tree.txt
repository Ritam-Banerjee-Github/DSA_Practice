/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    private TreeNode solve(TreeNode root, int currDepth, int val, int depth){
         if(root==null) return null;

         if(currDepth==depth-1){
             TreeNode lefttemp=root.left;
             TreeNode righttemp=root.right;

             root.left=new TreeNode(val);
             root.right=new TreeNode(val);

             root.left.left=lefttemp;
             root.right.right=righttemp;

             return root;
         }

         TreeNode left=solve(root.left,currDepth+1,val,depth);
         TreeNode right=solve(root.right,currDepth+1,val,depth);

         return root;
    }
    public TreeNode addOneRow(TreeNode root, int val, int depth) {
        if(depth==1){
            TreeNode node =new TreeNode(val);
            node.left=root;
            return node;
        }

        int currDepth=1;

        return solve(root,currDepth,val,depth);
    }
}