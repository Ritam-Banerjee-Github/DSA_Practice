/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class FindElements {
    Set<Integer> values=new HashSet<>();

    public FindElements(TreeNode root) {
        root.val=0;

        Queue<TreeNode> q=new LinkedList<>();
        q.add(root);

        while(!q.isEmpty()){
            TreeNode node=q.remove();
            values.add(node.val);

            if(node.left!=null){
                node.left.val=2*node.val+1;
                q.add(node.left);
            }

            if(node.right!=null){
                node.right.val=2*node.val+2;
                q.add(node.right);
            }
        }
    }
    
    public boolean find(int target) {
        if(values.contains(target)) return true;

        return false;
    }
}

