/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int countNodes(TreeNode root) {
        if(root == null) return 0; 
        
        int left = leftHeight(root); 
        int right = rightHeight(root); 
        
        if(left == right) return (int)Math.pow(2, left) - 1; 
        
        return countNodes(root.left)+ countNodes(root.right)+1;
        
        
    }

    private int leftHeight(TreeNode curr) {
        int height = 0; 
        while(curr != null) {
            height++; 
            curr = curr.left;
        }
        return height; 
    }

     private int rightHeight(TreeNode curr) {
        int height = 0; 
        while(curr != null) {
            height++; 
            curr =curr.right; 
        }
        return height; 
    }
}

TC - O(logn)^2