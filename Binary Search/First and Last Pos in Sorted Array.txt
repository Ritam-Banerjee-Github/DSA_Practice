import java.util.* ;
import java.io.*; 
public class Solution {
    private static int firstPos(ArrayList<Integer> arr, int n, int k){
          int low=0;
          int high=n-1;
          int ans=-1;
          while(low<=high){
              int mid=(low+high)/2;
            if(arr.get(mid)==k){
               ans=mid;
               high=mid-1;
            }
            else
            if(arr.get(mid)<k){
                low=mid+1;
            }
            else{
                high=mid-1;
            }
          }
          return ans;
    }
     private static int lastPos(ArrayList<Integer> arr, int n, int k){
          int low=0;
          int high=n-1;
          int ans=-1;
          while(low<=high){
              int mid=(low+high)/2;
            if(arr.get(mid)==k){
               ans=mid;
               low=mid+1;
            }
            else
            if(arr.get(mid)<k){
                low=mid+1;
            }
            else{
                high=mid-1;
            }
          }
          return ans;
    }
    public static int[] firstAndLastPosition(ArrayList<Integer> arr, int n, int k) {
        // Write your code here.
        int[] ans=new int[]{-1,-1};
      int first=firstPos(arr,n,k);
        if(first==-1) return ans;
        int second=lastPos(arr,n,k);
        ans[0]=first;
        ans[1]=second;
        return ans;
        
    }

};
