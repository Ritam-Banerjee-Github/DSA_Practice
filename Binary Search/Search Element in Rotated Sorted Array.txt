import java.util.ArrayList;
public class Solution {
    public static int search(ArrayList<Integer> arr, int n, int k) {
        // Write your code here.
        int low=0;
        int high=n-1;
        int ans=-1;
        while(low<=high){
            int mid=(low+high)/2;
            if(arr.get(mid)==k) return mid;
            else{
                if(arr.get(low)<=arr.get(mid)){   //First, find out which half is sorted. If it is left half then,
                      if(arr.get(low)<=k && k<=arr.get(mid)){ // Find if the element is in left half or not
                          high=mid-1;
                      }
                      else{
                          low=mid+1;
                      }
                }
                else{
                       if(arr.get(mid)<=k && k<=arr.get(high)){
                           low=mid+1;
                       }
                       else{
                           high=mid-1;
                       }
                }
            }

        }
        return ans;
    }
}

TC - O(N)
SC - O(1)