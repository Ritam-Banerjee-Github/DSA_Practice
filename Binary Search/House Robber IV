class Solution {
    public int minCapability(int[] nums, int k) {
        int n=nums.length;
        int low=Integer.MAX_VALUE;
        int high=Integer.MIN_VALUE;

        

        for(int i=0;i<n;i++){
            high=Math.max(high,nums[i]);
            low=Math.min(low,nums[i]);
        }

        int ans=high;

        while(low<=high){
            int mid=low+(high-low)/2;

            if(isPossible(mid,nums,k,n)){
                ans=mid;
                high=mid-1;
            }else{
                low=mid+1;
            }
        }

        return ans;
    }

    private boolean isPossible(int currMax, int[] nums, int k, int n){
        int house=0;

        for(int i=0;i<n;i++){
            if(nums[i]<=currMax){
                house++;
                i++;
            }
        }

        if(house>=k) return true;

        return false;
    }
}
