Brute Force -
class Solution {
    public int[] xorQueries(int[] arr, int[][] queries) {
        int n=arr.length;
        int m=queries.length;
        int currXor=0;
        int[] ans=new int[m];
        for(int i=0;i<m;i++){
            int left=queries[i][0];
            int right=queries[i][1];
            
            currXor=0;
            for(int j=left;j<=right;j++){
                currXor=currXor^arr[j];
            }
            
            ans[i]=currXor;
        }
        
        return ans;
    }
}

Optimal Solution (Self) - Using prefix array of Xors
class Solution {
    public int[] xorQueries(int[] arr, int[][] queries) {
        int n=arr.length;
        int m=queries.length;
       
        int[] ans=new int[m];
        int[] prefixXor=new int[n];
        prefixXor[0]=arr[0];
        
        for(int i=1;i<n;i++){
            prefixXor[i]=prefixXor[i-1]^arr[i];
        }
        
        for(int i=0;i<m;i++){
            int left=queries[i][0];
            int right=queries[i][1];
            
            if(left-1>=0) ans[i]=prefixXor[right]^prefixXor[left-1];
            else ans[i]=prefixXor[right];
        }
        
        return ans;
    }
}
