/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    List<Integer> list;
    int currValue=0;
    int currFreq=0;
    int maxFreq=0;

    private void solve(TreeNode root){  //Inoder of BST is sorted in asc order
        if(root==null) return;

        solve(root.left);
        if(currValue==root.val){
            currFreq++;

        }else{
            currFreq=1;
            currValue=root.val;
        }
        if(currFreq>maxFreq){
            list=new ArrayList<>();
            maxFreq=currFreq;
        }
        if(currFreq==maxFreq){
            list.add(currValue);
        }
      
        solve(root.right);

    }
    public int[] findMode(TreeNode root) {
        solve(root);
        int[] ans=new int[list.size()];
        for(int i=0;i<list.size();i++){
            ans[i]=list.get(i);
        }

        return ans;
    }
}