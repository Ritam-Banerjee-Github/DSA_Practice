class Solution {
    public long maximumSubarraySum(int[] nums, int k) {
        int n=nums.length;
        long ans=0;
        int start=0;
        int end=0;
        long sum=0;
        Map<Integer,Integer> map=new HashMap<>();

        while(end<n){
           map.put(nums[end],map.getOrDefault(nums[end],0)+1);
           sum+=nums[end];

           if(end-start+1==k){
            if(map.size()==k){
                ans=Math.max(ans,sum);
            }

            if(map.get(nums[start])!=1){
                map.put(nums[start],map.get(nums[start])-1);
            }else{
                map.remove(nums[start]);
            }
            
            sum-=nums[start];
            start++;
           }

           end++;
        }

        return ans;
    }
}
