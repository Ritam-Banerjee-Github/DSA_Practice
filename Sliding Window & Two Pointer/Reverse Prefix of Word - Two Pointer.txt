Solution 1: Using StringBuilder 
class Solution {
    private String reverseWord(String word, int i, int j){
        StringBuilder sb=new StringBuilder(word);
        
        while(i<j){
            char temp=sb.charAt(i);
            sb.setCharAt(i,sb.charAt(j));
            sb.setCharAt(j,temp);
            i++;
            j--;
        }
        
        return sb.toString();
    }
    public String reversePrefix(String word, char ch) {
        int n=word.length();
        int index=-1;
        
        for(int i=0;i<n;i++){
            if(word.charAt(i)==ch){
                index=i;
                break;
            }
        }
        
        if(index==-1) return word;
        
        String ans=reverseWord(word,0,index);
        
        return ans;
    }
}

TC : O(N) + O(N) 

Solution 2 : Using StringBuffer
class Solution {
    private String reverseWord(String word, int i, int j){
        StringBuffer sb=new StringBuffer(word);
        
        while(i<j){
            char temp=sb.charAt(i);
            sb.setCharAt(i,sb.charAt(j));
            sb.setCharAt(j,temp);
            i++;
            j--;
        }
        
        return sb.toString();
    }
    public String reversePrefix(String word, char ch) {
        int n=word.length();
        int index=-1;
        
        for(int i=0;i<n;i++){
            if(word.charAt(i)==ch){
                index=i;
                break;
            }
        }
        
        if(index==-1) return word;
        
        String ans=reverseWord(word,0,index);
        
        return ans;
    }
}