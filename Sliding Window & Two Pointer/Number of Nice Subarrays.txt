class Solution {
    private static int atmost(int[] arr, int target, int n){
        int start=0;
        int count=0;
        int ans=0;
        for(int end=0;end<n;end++){
            if(arr[end]%2!=0)count++;
            while(count>target){
                if(arr[start]%2!=0) count--;
                    start++;
               }
    
            ans+=end-start+1; 
        }
        return ans;
    }
    public static int countSubarray(int n, int[] nums, int target) {
        // code here
        return atmost(nums,target,n)-atmost(nums,target-1,n);
    }
}

TC - O(N)
SC - O(1)